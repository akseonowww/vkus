"use strict";(globalThis.webpackChunkvknext=globalThis.webpackChunkvknext||[]).push([[9038],{89038:(t,e,a)=>{a.d(e,{decryptString:()=>y,encryptString:()=>l});const n={alg:"A256GCM",ext:!0,k:"aPrR7gLLeLawtQX4u1gp7FzXNMjfSbDVs9LwP-n9ux0",key_ops:["encrypt","decrypt"],kty:"oct"},r=async()=>await crypto.subtle.importKey("jwk",n,{name:"AES-GCM"},!1,["encrypt","decrypt"]),c=async(t,e)=>{const a=(t=>(new TextEncoder).encode(t))(t),n=globalThis.crypto.getRandomValues(new Uint8Array(16));return{cipher:await globalThis.crypto.subtle.encrypt({name:"AES-GCM",iv:n},e,a),iv:n}},o=t=>{const e=new Uint8Array(t);return globalThis.btoa(String.fromCharCode.apply(null,e))},i=t=>{const e=globalThis.atob(t),a=new ArrayBuffer(e.length),n=new Uint8Array(a);for(let t=0;t<e.length;t++)n[t]=e.charCodeAt(t);return a},s=async(t,e,a)=>{const n=await globalThis.crypto.subtle.decrypt({name:"AES-GCM",iv:a},e,t);return r=n,(new TextDecoder).decode(r);var r},l=async t=>{const e=await r(),{cipher:a,iv:n}=await c(t,e);return{themeId:o(a),dataId:o(n)}},y=async(t,e)=>await s(i(t),await r(),i(e))}}]);